// Code generated by goctl. DO NOT EDIT!

package sysadmin

import (
	"time"
)

type SysRole struct {
	Id          int64     `json:"id" gorm:"column:id" column:"id"`                                  // 编号
	ParentId    int64     `json:"parent_id" gorm:"column:parent_id" column:"parent_id"`             // 父级id
	Name        string    `json:"name" gorm:"column:name" column:"name"`                            // 名称
	UniqueKey   string    `json:"unique_key" gorm:"column:unique_key" column:"unique_key"`          // 唯一标识
	Remark      string    `json:"remark" gorm:"column:remark" column:"remark"`                      // 备注
	PermMenuIds string    `json:"perm_menu_ids" gorm:"column:perm_menu_ids" column:"perm_menu_ids"` // 权限集
	Status      int64     `json:"status" gorm:"column:status" column:"status"`                      // 0=禁用 1=开启
	OrderNum    int64     `json:"order_num" gorm:"column:order_num" column:"order_num"`             // 排序值
	Created     time.Time `json:"created" gorm:"column:created" column:"created"`                   // 创建时间
	Updated     time.Time `json:"updated" gorm:"column:updated" column:"updated"`                   // 更新时间
}

func (ins *SysRole) TableName() string {
	return "`sys_role`"
}

func (ins *SysRole) GetPKColumnName() string {
	return "id"
}

func (ins *SysRole) GetPkValue() interface{} {
	return ins.Id
}

func (ins *SysRole) SetTime() {
	hasPkValue := false
	val := ins.GetPkValue()
	switch val.(type) {
	case int:
		hasPkValue = val.(int) > 0
	case int64:
		hasPkValue = val.(int64) > 0
	case uint8:
		hasPkValue = val.(uint8) > 0
	case int32:
		hasPkValue = val.(int32) > 0
	case string:
		hasPkValue = val.(string) != ""
	}
	if !hasPkValue {
		ins.Created = time.Now()
	}
	ins.Updated = time.Now()

	return
}
