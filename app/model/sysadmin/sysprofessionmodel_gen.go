// Code generated by goctl. DO NOT EDIT!

package sysadmin

import (
	"time"
)

type SysProfession struct {
	Id       int64     `json:"id" gorm:"column:id" column:"id"`                      // 编号
	Name     string    `json:"name" gorm:"column:name" column:"name"`                // 职称
	Status   int64     `json:"status" gorm:"column:status" column:"status"`          // 0=禁用 1=开启
	OrderNum int64     `json:"order_num" gorm:"column:order_num" column:"order_num"` // 排序值
	Created  time.Time `json:"created" gorm:"column:created" column:"created"`       // 创建时间
	Updated  time.Time `json:"updated" gorm:"column:updated" column:"updated"`       // 更新时间
}

func (ins *SysProfession) TableName() string {
	return "`sys_profession`"
}

func (ins *SysProfession) GetPKColumnName() string {
	return "id"
}

func (ins *SysProfession) GetPkValue() interface{} {
	return ins.Id
}

func (ins *SysProfession) SetTime() {
	hasPkValue := false
	val := ins.GetPkValue()
	switch val.(type) {
	case int:
		hasPkValue = val.(int) > 0
	case int64:
		hasPkValue = val.(int64) > 0
	case uint8:
		hasPkValue = val.(uint8) > 0
	case int32:
		hasPkValue = val.(int32) > 0
	case string:
		hasPkValue = val.(string) != ""
	}
	if !hasPkValue {
		ins.Created = time.Now()
	}
	ins.Updated = time.Now()

	return
}
