// Code generated by goctl. DO NOT EDIT!

package sysadmin

import (
	"time"
)

type SysLog struct {
	Id      int64     `json:"id" gorm:"column:id" column:"id"`                // 编号
	UserId  int64     `json:"user_id" gorm:"column:user_id" column:"user_id"` // 操作账号
	Ip      string    `json:"ip" gorm:"column:ip" column:"ip"`                // ip
	Uri     string    `json:"uri" gorm:"column:uri" column:"uri"`             // 请求路径
	Type    int64     `json:"type" gorm:"column:type" column:"type"`          // 1=登录日志 2=操作日志
	Request string    `json:"request" gorm:"column:request" column:"request"` // 请求数据
	Status  int64     `json:"status" gorm:"column:status" column:"status"`    // 0=失败 1=成功
	Created time.Time `json:"created" gorm:"column:created" column:"created"` // 创建时间
	Updated time.Time `json:"updated" gorm:"column:updated" column:"updated"` // 更新时间
}

func (ins *SysLog) TableName() string {
	return "`sys_log`"
}

func (ins *SysLog) GetPKColumnName() string {
	return "id"
}

func (ins *SysLog) GetPkValue() interface{} {
	return ins.Id
}

func (ins *SysLog) SetTime() {
	hasPkValue := false
	val := ins.GetPkValue()
	switch val.(type) {
	case int:
		hasPkValue = val.(int) > 0
	case int64:
		hasPkValue = val.(int64) > 0
	case uint8:
		hasPkValue = val.(uint8) > 0
	case int32:
		hasPkValue = val.(int32) > 0
	case string:
		hasPkValue = val.(string) != ""
	}
	if !hasPkValue {
		ins.Created = time.Now()
	}
	ins.Updated = time.Now()

	return
}
