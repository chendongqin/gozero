// Code generated by goctl. DO NOT EDIT!

package sysadmin

import (
	"time"
)

type SysUser struct {
	Id           int64     `json:"id" gorm:"column:id" column:"id"`                                  // 编号
	Account      string    `json:"account" gorm:"column:account" column:"account"`                   // 账号
	Password     string    `json:"password" gorm:"column:password" column:"password"`                // 密码
	Salt         string    `json:"salt" gorm:"column:salt" column:"salt"`                            // 盐
	Username     string    `json:"username" gorm:"column:username" column:"username"`                // 姓名
	Nickname     string    `json:"nickname" gorm:"column:nickname" column:"nickname"`                // 昵称
	Avatar       string    `json:"avatar" gorm:"column:avatar" column:"avatar"`                      // 头像
	Gender       int64     `json:"gender" gorm:"column:gender" column:"gender"`                      // 0=保密 1=女 2=男
	Email        string    `json:"email" gorm:"column:email" column:"email"`                         // 邮件
	Mobile       string    `json:"mobile" gorm:"column:mobile" column:"mobile"`                      // 手机号
	ProfessionId int64     `json:"profession_id" gorm:"column:profession_id" column:"profession_id"` // 职称
	JobId        int64     `json:"job_id" gorm:"column:job_id" column:"job_id"`                      // 岗位
	DeptId       int64     `json:"dept_id" gorm:"column:dept_id" column:"dept_id"`                   // 部门
	RoleIds      string    `json:"role_ids" gorm:"column:role_ids" column:"role_ids"`                // 角色集
	Status       int64     `json:"status" gorm:"column:status" column:"status"`                      // 0=禁用 1=开启
	OrderNum     int64     `json:"order_num" gorm:"column:order_num" column:"order_num"`             // 排序值
	Remark       string    `json:"remark" gorm:"column:remark" column:"remark"`                      // 备注
	Created      time.Time `json:"created" gorm:"column:created" column:"created"`                   // 创建时间
	Updated      time.Time `json:"updated" gorm:"column:updated" column:"updated"`                   // 更新时间
}

func (ins *SysUser) TableName() string {
	return "`sys_user`"
}

func (ins *SysUser) GetPKColumnName() string {
	return "id"
}

func (ins *SysUser) GetPkValue() interface{} {
	return ins.Id
}

func (ins *SysUser) SetTime() {
	hasPkValue := false
	val := ins.GetPkValue()
	switch val.(type) {
	case int:
		hasPkValue = val.(int) > 0
	case int64:
		hasPkValue = val.(int64) > 0
	case uint8:
		hasPkValue = val.(uint8) > 0
	case int32:
		hasPkValue = val.(int32) > 0
	case string:
		hasPkValue = val.(string) != ""
	}
	if !hasPkValue {
		ins.Created = time.Now()
	}
	ins.Updated = time.Now()

	return
}
